// Задание 1
// Описание: Написать функцию sum, которая может быть исполнена любое количество раз с не undefined аргументом. 
// Если она исполнена без аргументов, то возвращает значение суммы всех переданных до этого значений. 
// sum(1)(2)(3)....(n)() === 1 + 2 + 3 + ... + n


// Решение:
let sum = function (a) {
	return function (b) {
		if (b) {
		  	return sum(a + b);
		}
		return a; 
	};
};

console.log(sum(2)(3)());

// Объяснение:
// Первый вызов sum в которую передали 2, вернул нам безымянную функцию, которую мы вызвали и в которую передали 3.
// Т.к 3 не false безымянная функция вернула нам вызов sum в которую мы передали 2ку, из вызова sum, и 3ку из вызова безымянной функции.
// В ответ sum вернула безыменняю функцию, которую мы вызвали не передав аргумента.
// T.к. пришел false безымянная функция вернула нам a.
// Переменная а существует в лексическом окружении функции sum и на момент последнего вызова безымянной функции равна 5.

// Фактически мы можем отойти от каррирования и разложить вызовы по переменным:
let noNameFun 	= sum(2);
let sumCall 	= noNameFun(3);
console.log(sumCall());